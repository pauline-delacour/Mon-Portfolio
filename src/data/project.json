[
	{
		"id": "1",
		"title": "Projet 1: Créez la page d'accueil d'une agence de voyage avec HTML & CSS",
		"cover": "/assets/imagep1.webp",
		"pictures": "/assets/imagep1.webp",
		"lien": "https://github.com/pauline-delacour/Projet-2_Booki",
		"description": "J'ai créé une page d'accueil moderne et responsive pour une agence de voyage en utilisant HTML et CSS. Ce projet incluait l'intégration des maquettes Figma pour mobile, tablette, et desktop. Les obstacles rencontrés ont été le fait d'assurer que la page soit parfaitement responsive et s'adapte harmonieusement aux tailles d'écran. Pour surmonter ces obstacles j'ai utilisé les média queries pour ajuster les élèments en fonction de la résolution et j'ai appliqué des tailles en pourcentage pour que les éléments s'adaptent proportionnellement à l'écran.",
		"technologies": [
			"HTML",
			"CSS",
			"Figma",
			"GitHub"
		]
	},

    {
		"id": "2",
		"title": "Projet 2: Créez une page web dynamique avec Javascript",
		"cover": "/assets/imagep2.webp",
		"pictures": "/assets/imagep2.webp",
		"lien": "https://github.com/pauline-delacour/Portfolio-architecte-sophie-bluel",
		"description":"Développement d'une page web interactive en JavaScript pour présenter les réalisations d'une architecte d'intérieur. Le travail incluait une page de connexion, la création de modales, et la communication avec une API. Ce projet a renforcé mes compétences en JavaScript, en gestion d'API et en création d’interfaces dynamiques. Le principal défi a été de gérer l'authentification sur la page de connexion et de garantir une communication fluide avec l'API pour récupérer et afficher les données en temps réel. Pour résoudre ces problématiques, j'ai utilisé des sessions sécurisées avec JWT pour gérer l'authentification, et j’ai mis en place des requêtes asynchrones avec fetch pour communiquer avec l'API, tout en ajoutant une gestion des erreurs pour une meilleure expérience utilisateur" ,
		"technologies": [
			"HTML",
			"CSS",
            "Javascript",
			"GitHub"
		]
	},
    {
		"id": "3",
		"title": "Projet 3: Débuggez et optimisez un site de photographe",
		"cover": "/assets/imagep3.webp",
		"pictures": "/assets/imagep3.webp",
		"lien": "https://github.com/pauline-delacour/Nina-Carducci-Dev",
		"description": "Ce projet avait pour objectif d'optimiser le référencement d'un site en identifiant et corrigeant les problèmes de performance avec les outils Lighthouse et Wave. J’ai proposé et appliqué des améliorations pour optimiser la vitesse de chargement et la structure du code, renforçant ainsi mes compétences en SEO et en performance web. Le principal défi a été de comprendre pourquoi le carrousel ne fonctionnait pas correctement, d'autant plus que le code utilisait jQuery, une librairie que je ne maîtrisais pas. En utilisant les DevTools, j’ai pu identifier que le problème venait de l’incrémentation et de la décrémentation des index au mauvais endroit, ce qui m’a permis de corriger le carrousel et d’optimiser la fluidité du site",
		"technologies": [
			"Lightouse",
			"Wave",
			"GitHub"
		]
	},
    {
		"id": "4",
		"title": "Projet 4: Créez une application web de location immobiliére avec React",
		"cover": "/assets/imagep4.webp",
		"pictures": "/assets/imagep4.webp",
		"lien": "https://github.com/pauline-delacour/Kasa",
		"description": "J'ai implémenté le front-end d'une application en utilisant React et React Router, créant ainsi une expérience utilisateur moderne et réactive. En m'appuyant sur le principe des composants de React, facilite la gestion des données et la navigation entre les différentes pages. Le principal obstacle pour ce projet a été de gérer efficacement les états de l'application sans dupliquer les données. J'ai résolu ce probléme en utilisant les composants et les hooks de React, ce qui m'a permis de simplifié la gestion des données ",
		"technologies": [
			"React",
			"React-Router",
			"JSX",
            "SASS",
			"GitHub"
		]
	},
    {
		"id": "5",
		"title": "Projet 5: Développez le back-end d'un site de notation de livres avec Express et NodeJs",
		"cover": "/assets/imagep5.webp",
		"pictures": "/assets/imagep5.webp",
		"lien": "https://github.com/pauline-delacour/P6--Mon-vieux-grimoire",
		"description": "J'ai développé le back-end d'une application en utilisant Express et MongoDB, avec des opérations CRUD pour gérer les livres et les notations, ainsi qu'un système d'authentification sécurisé pour les utilisateurs. Le principal défi rencontré a été la gestion de fichiers portant des noms identiques, comme ceux contenant la logique métier et les routes, ce qui créait de la confusion. J'ai surmonté ce problème en réorganisant la structure du projet, en séparant clairement chaque fichier et en utilisant des noms explicites ",
		"technologies": [
			"Express",
			"NodeJs",
			"MongoDB",
			"API RESTful",
			"JWT (Json Web Token)",
			"GitHub"
		]
	},
    {
		"id": "6",
		"title": "Projet 6: Planifiez le développement du site de votre client",
		"cover": "/assets/imagep6.webp",
		"pictures":  "/assets/imagep6.webp",
		"lien": "https://www.notion.so/1265f0963b3780669581fea111d1ec4d?v=1265f0963b378095b0ea000c120c8eb5",
		"description":"Dans ce projet, j'ai planifié le développement d'un site web en me basant sur une maquette fournie. J'ai utilisé la méthode Agile Scrum pour organiser le travail et favoriser la gestion autonome du projet. Grâce à un tableau Kanban, j'ai pu visualiser l'avancement des tâches et assurer un suivi structuré, tout en élaborant des documents de spécifications techniques pour clarifier les besoins fonctionnels. La principale problématique a été de découper les user stories en tâches réalisables. Pour surmonter cette difficulté, j'ai décomposé chaque fonctionnalité en sous-tâches claires et gérables, ce qui m'a permis de progresser de manière fluide.",
		"technologies": [
			"Kanban",
			"Méthodologie Agile/scrum"
		]
	}
    
]